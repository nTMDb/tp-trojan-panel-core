syntax = "proto3";

option go_package = ".;api";

service ApiNodeService {
  rpc AddNode(NodeAddDto) returns (Response) {}
  rpc RemoveNode(NodeRemoveDto) returns (Response) {}
}

service ApiAccountService {
  rpc RemoveAccount(AccountRemoveDto) returns (Response) {}
}

service ApiStateService {
  rpc Ping(StateDto) returns (Response) {}
}

message NodeAddDto {
  uint64 nodeTypeId = 1;
  uint64 port = 2;
  string nodeServerIp = 3;

  string xrayProtocol = 4;
  string xraySettings = 5;
  string xrayStreamSettings = 6;
  string xrayTag = 7;
  string xraySniffing = 8;
  string xrayAllocate = 9;

  string trojanGoSni = 10;
  uint64 trojanGoMuxEnable = 11;
  uint64 trojanGoWebsocketEnable = 12;
  string trojanGoWebsocketPath = 13;
  string trojanGoWebsocketHost = 14;
  uint64 trojanGoSSEnable = 15;
  string trojanGoSSMethod = 16;
  string trojanGoSSPassword = 17;

  string hysteriaProtocol = 18;
  int64 hysteriaUpMbps = 19;
  int64 hysteriaDownMbps = 20;
}

message NodeRemoveDto {
  uint64 nodeType = 1;
  uint64 port = 2;
}

message AccountRemoveDto {
  string password = 1;
}

message StateDto {}

message Response {
  bool success = 1;
  string msg = 2;
}